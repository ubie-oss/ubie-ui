{"version":3,"file":"Toggle.stories-d67e4e76.js","sources":["../../src/components/Toggle/Toggle.tsx"],"sourcesContent":["'use client';\n\nimport clsx from 'clsx';\nimport { FC, InputHTMLAttributes, forwardRef, useRef, useState } from 'react';\nimport styles from './Toggle.module.css';\n\ntype Props = {\n  /**\n   * 現在の状態が選択中かどうか\n   */\n  checked?: boolean;\n  /**\n   * 初期状態が選択状態かどうか\n   * @default false\n   */\n  defaultChecked?: boolean;\n  /**\n   * 値が変化した場合のコールバック\n   */\n  onChange?: InputHTMLAttributes<HTMLInputElement>['onChange'];\n  /**\n   * 無効状態かどうか\n   * @default false\n   */\n  disabled?: boolean;\n} & Omit<InputHTMLAttributes<HTMLInputElement>, 'children' | 'onChange'>;\n\nexport const Toggle: FC<Props> = forwardRef<HTMLLabelElement, Props>(\n  ({ checked: checkedProps, defaultChecked, onChange, ...otherProps }, ref) => {\n    const { current: isUnControlled } = useRef(checkedProps === undefined);\n    const [isUnControlledChecked, setIsUnControlledChecked] = useState(defaultChecked);\n\n    const isChecked = isUnControlled ? isUnControlledChecked : checkedProps;\n\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n      if (isUnControlled) {\n        setIsUnControlledChecked(event.target.checked);\n      }\n      if (onChange) onChange(event);\n    };\n\n    return (\n      <label ref={ref} className={clsx(styles.root, isChecked ? styles.on : styles.off)}>\n        <input\n          type=\"checkbox\"\n          role=\"switch\"\n          checked={isChecked}\n          onChange={handleChange}\n          className={styles.input}\n          {...otherProps}\n        />\n        <span className={clsx(styles.thumb, isChecked ? styles.thumbOn : styles.thumbOff)} />\n      </label>\n    );\n  },\n);\n\nToggle.displayName = 'Toggle';\n"],"names":["Toggle","forwardRef","checkedProps","defaultChecked","onChange","otherProps","ref","isUnControlled","useRef","isUnControlledChecked","setIsUnControlledChecked","useState","isChecked","handleChange","event","jsxs","clsx","styles","jsx"],"mappings":"sXA2BOA,EAAAC,EAAA,WAA0B,CAAA,CAAA,QAAAC,EAAA,eAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAE7B,KAAA,CAAA,QAAAC,CAAA,EAAAC,EAAA,OAAAN,IAAA,MAAA,EACA,CAAAO,EAAAC,CAAA,EAAAC,EAAA,SAAAR,CAAA,EAEAS,EAAAL,EAAAE,EAAAP,EAEAW,EAAAC,GAAA,CACEP,GACEG,EAAAI,EAAA,OAAA,OAAA,EAEFV,GAAcA,EAAAU,CAAA,CAAc,EAG9B,OAAAC,EAAA,QAAA,CAAA,IAAAT,EAAA,UAAAU,EAAAC,EAAA,KAAAL,EAAAK,EAAA,GAAAA,EAAA,GAAA,EAAA,SAAA,CAEIC,EAAA,QAAC,CAAA,KAAA,WACM,KAAA,SACA,QAAAN,EACI,SAAAC,EACC,UAAAI,EAAA,MACQ,GAAAZ,CACd,CAAA,EACNa,EAAA,OAAA,CAAA,UAAAF,EAAAC,EAAA,MAAAL,EAAAK,EAAA,QAAAA,EAAA,QAAA,CAAA,CAAA,CACmF,CAAA,CAAA,CACrF,CAGN,EAEAjB,EAAA,YAAA;;;;;;;;"}