import{j as l}from"./jsx-runtime-69eee039.js";import{c as A}from"./clsx-1229b3e0.js";import{r as y}from"./index-7c191284.js";import{f as C}from"./component-22a2265d.js";const b="_text_9nleu_1",B="_link_9nleu_39",h="_bold_9nleu_53",D="_body_9nleu_58",x="_sm_9nleu_58",w="_md_9nleu_62",q="_lg_9nleu_66",V="_heading_9nleu_70",k="_xs_9nleu_70",T="_xl_9nleu_86",R="_note_9nleu_90",j="_button_9nleu_102",N="_tag_9nleu_114",S="_narrow_9nleu_150",H="_tight_9nleu_154",L="_main_9nleu_159",M="_sub_9nleu_163",z="_linkSub_9nleu_171",O="_disabled_9nleu_175",W="_primary_9nleu_179",I="_accent_9nleu_183",P="_alert_9nleu_187",G="_white_9nleu_191",J="_left_9nleu_195",X="_center_9nleu_199",K="_right_9nleu_203",Q="_nowrap_9nleu_207",u={text:b,link:B,bold:h,body:D,sm:x,md:w,lg:q,heading:V,xs:k,xl:T,note:R,button:j,tag:N,default:"_default_9nleu_127",narrow:S,tight:H,main:L,sub:M,linkSub:z,disabled:O,primary:W,accent:I,alert:P,white:G,left:J,center:X,right:K,nowrap:Q};function U(t,d){const{render:e,as:n="p",size:c="md",type:_="body",leading:m="default",bold:f=!1,noWrap:p=!1,color:a,children:F,id:v,textAlign:r,...E}=t,g=a??(n==="a"||n==="button"||e!=null?"link":"main");return((o,i)=>e?y.cloneElement(e,o,i):l.jsx(n,{...o,children:i}))({ref:d,id:v,className:A(u.text,u[c],u[_],u[m],u[g],r&&u[r],f&&u.bold,p&&u.nowrap),...E},l.jsx(l.Fragment,{children:F}))}const s=C(U);try{s.displayName="Text",s.__docgenInfo={description:"",displayName:"Text",props:{as:{defaultValue:{value:"p"},description:`レンダリングされる要素を指定。renderとは違い、HTMLのネイティブ要素に限定
また、指定した要素に応じて対応する属性も合わせて使用可能に`,name:"as",required:!1,type:{name:"ElementType"}},render:{defaultValue:null,description:`レンダリングされる要素を変更。フレームワークのリンクコンポーネントを想定しています
指定した場合、colorがデフォルトでlinkになります`,name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},children:{defaultValue:null,description:`表示するテキスト
pやdivなどを含めないでください（文法的にNGです）`,name:"children",required:!1,type:{name:"ReactNode"}},bold:{defaultValue:{value:"false"},description:"太字とするかどうか",name:"bold",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"main"},description:"文字色の抽象値",name:"color",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"main"'},{value:'"sub"'},{value:'"disabled"'},{value:'"linkSub"'},{value:'"primary"'},{value:'"accent"'},{value:'"alert"'},{value:'"white"'}]}},id:{defaultValue:null,description:"HTMLのid属性",name:"id",required:!1,type:{name:"string"}},textAlign:{defaultValue:null,description:"テキストの配置。指定しない場合、親要素の配置を継承",name:"textAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},noWrap:{defaultValue:null,description:"領域が狭い場合でも折り返えさない",name:"noWrap",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"body"},description:"テキストの種類",name:"type",required:!1,type:{name:"enum",value:[{value:'"body"'},{value:'"button"'},{value:'"heading"'},{value:'"note"'},{value:'"tag"'}]}},size:{defaultValue:{value:"md"},description:"フォントサイズの抽象値",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},leading:{defaultValue:{value:`default
default
default
default`},description:"行送りの抽象値（`line-height`）",name:"leading",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"narrow"'},{value:'"tight"'}]}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom",name:"ref",required:!1,type:{name:"Ref<any> | ((((instance: HTMLParagraphElement | null) => void) | RefObject<HTMLParagraphElement>) & (((instance: any) => void) | RefObject<...>))"}}}}}catch{}export{s as T};
