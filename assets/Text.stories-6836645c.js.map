{"version":3,"file":"Text.stories-6836645c.js","sources":["../../src/components/Text/Text.tsx"],"sourcesContent":["'use client';\n\nimport { clsx } from 'clsx';\nimport { FC, ElementType, ReactNode } from 'react';\nimport styles from './Text.module.css';\nimport { FontSize, Leading, TextColor, TextType } from '../../types/style';\n\ntype Props = {\n  as?: ElementType<{ className?: string; children: ReactNode }>;\n  size?: FontSize;\n  type?: TextType;\n  leading?: Leading;\n  bold?: boolean;\n  color?: TextColor;\n  children: ReactNode;\n  className?: string;\n};\n\n/**\n * テキスト用コンポーネント\n * テキストにスタイルを適用したいときに使用する\n *\n * @param size フォントサイズの抽象値。初期値は md\n * @param type テキストの種類。初期値は body\n * @param leading 行送りの抽象値（line-height）。初期値は default\n * @param bold テキストの太字をコントロールする値\n * @param color 文字色の抽象値。初期値は textMain\n * @param as テキストコンポーネントの HTML タグ名。初期値は p\n * @param children\n */\nexport const Text: FC<Props> = ({\n  as: TextComponent = 'p',\n  size = 'md',\n  type = 'body',\n  leading = 'default',\n  bold = false,\n  color = 'main',\n  children,\n  className,\n}) => {\n  return (\n    <TextComponent\n      className={clsx(\n        className,\n        styles.text,\n        bold && styles.bold,\n        styles[size],\n        styles[type],\n        styles[leading],\n        styles[color],\n      )}\n    >\n      {children}\n    </TextComponent>\n  );\n};\n"],"names":["Text","TextComponent","size","type","leading","bold","color","children","className","jsx","clsx","styles"],"mappings":"wzBA8BaA,EAAkB,CAAC,CAC9B,GAAIC,EAAgB,IACpB,KAAAC,EAAO,KACP,KAAAC,EAAO,OACP,QAAAC,EAAU,UACV,KAAAC,EAAO,GACP,MAAAC,EAAQ,OACR,SAAAC,EACA,UAAAC,CACF,IAEIC,EAACR,EAAA,CACC,UAAWS,EACTF,EACAG,EAAO,KACPN,GAAQM,EAAO,KACfA,EAAOT,CAAI,EACXS,EAAOR,CAAI,EACXQ,EAAOP,CAAO,EACdO,EAAOL,CAAK,CACd,EAEC,SAAAC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;"}