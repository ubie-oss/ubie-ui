{"version":3,"file":"Input-7d988832.js","sources":["../../src/components/Input/Input.tsx"],"sourcesContent":["'use client';\n\nimport { clsx } from 'clsx';\nimport { FC, forwardRef, InputHTMLAttributes } from 'react';\nimport styles from './Input.module.css';\n\ntype Props = {\n  /**\n   * ネイティブ要素の `id` 属性。ページで固有のIDを指定\n   */\n  id?: InputHTMLAttributes<HTMLInputElement>['id'];\n  /**\n   * 有効でない入力を保持しているかどうか\n   */\n  isInvalid?: boolean;\n  /**\n   * 値\n   */\n  value: string | number;\n  /**\n   * フィールドを無効化するかどうか\n   */\n  disabled?: boolean;\n  /**\n   * 値が変化した場合のコールバック\n   */\n  onChange?: InputHTMLAttributes<HTMLInputElement>['onChange'];\n} & Omit<InputHTMLAttributes<HTMLInputElement>, 'id' | 'invalid' | 'value' | 'disabled' | 'onChange'>;\n\nexport const Input: FC<Props> = forwardRef<HTMLInputElement, Props>(({ isInvalid, ...props }, ref) => {\n  const className = clsx({ [styles.isInvalid]: isInvalid && !props.disabled }, styles.input, props.className);\n\n  return <input {...props} className={className} ref={ref} aria-invalid={isInvalid} />;\n});\n\nInput.displayName = 'Input';\n"],"names":["Input","forwardRef","isInvalid","props","ref","className","clsx","styles","jsx"],"mappings":"sMA6BOA,EAAAC,EAAA,WAAA,CAAA,CAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CACL,MAAAC,EAAAC,EAAA,CAAA,CAAAC,EAAA,SAAA,EAAAL,GAAA,CAAAC,EAAA,QAAA,EAAAI,EAAA,MAAAJ,EAAA,SAAA,EAEA,OAAAK,EAAA,QAAA,CAAA,GAAAL,EAAA,UAAAE,EAAA,IAAAD,EAAA,eAAAF,CAAA,CAAA,CACF,CAAA,EAEAF,EAAA,YAAA"}