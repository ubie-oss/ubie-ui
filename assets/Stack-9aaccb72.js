import{j as i}from"./jsx-runtime-9c4ae004.js";import{c as u}from"./clsx-1229b3e0.js";const m="_stack_bluv1_1",c={stack:m},o=({as:e="div",children:a,className:l,spacing:t,direction:n="column",alignItems:r="flex-start",justifyContent:s="flex-start"})=>i.jsx(e,{style:{flexDirection:`${n}`,alignItems:`${r}`,justifyContent:`${s}`,gap:`var(--size-spacing-${t})`},className:u(l,c.stack),children:a});o.__docgenInfo={description:`Stackコンポーネント
一方向に一定のリズムで要素を積み上げるレイアウト`,methods:[],displayName:"Stack",props:{as:{required:!1,tsType:{name:"ElementType",elements:[{name:"signature",type:"object",raw:"{ className?: string; children: ReactNode }",signature:{properties:[{key:"className",value:{name:"string",required:!1}},{key:"children",value:{name:"ReactNode",required:!0}}]}}],raw:"ElementType<{ className?: string; children: ReactNode }>"},description:`レンダリングされるコンポーネントまたはHTML要素
@default div`,defaultValue:{value:"'div'",computed:!1}},spacing:{required:!0,tsType:{name:"union",raw:"'xxs' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'",elements:[{name:"literal",value:"'xxs'"},{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"},{name:"literal",value:"'xxl'"}]},description:"子要素の間隔"},direction:{required:!1,tsType:{name:"union",raw:"'row' | 'column'",elements:[{name:"literal",value:"'row'"},{name:"literal",value:"'column'"}]},description:`direction 重ねる向き
@default column`,defaultValue:{value:"'column'",computed:!1}},alignItems:{required:!1,tsType:{name:"union",raw:"'normal' | 'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'flex-start'"},{name:"literal",value:"'center'"},{name:"literal",value:"'flex-end'"},{name:"literal",value:"'stretch'"},{name:"literal",value:"'baseline'"}]},description:"主軸方向における子要素のレイアウトを定める。`direction` prop が `column` の場合は水平軸、 `row` の場合は垂直軸のレイアウトを制御する。水平軸の場合に、ブロックレベル要素を幅いっぱいに占有させたい場合は `normal` を使うこと\n@default flex-start",defaultValue:{value:"'flex-start'",computed:!1}},justifyContent:{required:!1,tsType:{name:"union",raw:`| 'normal'
| 'flex-start'
| 'center'
| 'flex-end'
| 'space-between'
| 'space-around'
| 'space-evenly'`,elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'flex-start'"},{name:"literal",value:"'center'"},{name:"literal",value:"'flex-end'"},{name:"literal",value:"'space-between'"},{name:"literal",value:"'space-around'"},{name:"literal",value:"'space-evenly'"}]},description:"交差軸方向における子要素のレイアウトを定める。directionが `column` の場合は垂軸直、`row` の場合は水平軸のレイアウトを制御する。水平軸の場合に、ブロックレベル要素を幅いっぱいに占有させたい場合は `normal` を使うこと\n@default flex-start",defaultValue:{value:"'flex-start'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"CSSのクラス"},children:{required:!0,tsType:{name:"ReactNode"},description:"子要素"}}};export{o as S};
