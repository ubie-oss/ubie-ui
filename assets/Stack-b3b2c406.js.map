{"version":3,"file":"Stack-b3b2c406.js","sources":["../../src/components/Stack/Stack.tsx"],"sourcesContent":["'use client';\n\nimport { clsx } from 'clsx';\nimport { ElementType, FC, ReactNode } from 'react';\nimport styles from './Stack.module.css';\nimport { Spacing, FlexDirection, AlignItems, JustifyContent } from '../../types/style';\n\ntype Props = {\n  as?: ElementType<{ className?: string; children: ReactNode }>;\n  spacing: Spacing;\n  direction?: FlexDirection;\n  alignItems?: AlignItems;\n  justifyContent?: JustifyContent;\n  className?: string;\n  children: ReactNode;\n};\n\n/**\n * Stackコンポーネント\n * 要素を重ねたいときに使う(Flexbox)\n *\n * @param as コンポーネントの HTML タグ名。初期値は div\n * @param spacing 子要素の間隔。\n * @param direction 重ねる向き。初期値は column\n * @param alignItems\n * @param justifyContent\n * @param children\n */\nexport const Stack: FC<Props> = ({\n  as: StackComponent = 'div',\n  children,\n  className,\n  spacing,\n  direction = 'column',\n  alignItems = 'flex-start',\n  justifyContent = 'flex-start',\n}) => {\n  return (\n    <StackComponent\n      style={{\n        flexDirection: `${direction}`,\n        alignItems: `${alignItems}`,\n        justifyContent: `${justifyContent}`,\n        gap: `var(--size-spacing-${spacing})`,\n      }}\n      className={clsx(className, styles.stack)}\n    >\n      {children}\n    </StackComponent>\n  );\n};\n"],"names":["Stack","StackComponent","children","className","spacing","direction","alignItems","justifyContent","jsx","clsx","styles"],"mappings":"mFA4BaA,EAAmB,CAAC,CAC/B,GAAIC,EAAiB,MACrB,SAAAC,EACA,UAAAC,EACA,QAAAC,EACA,UAAAC,EAAY,SACZ,WAAAC,EAAa,aACb,eAAAC,EAAiB,YACnB,IAEIC,EAACP,EAAA,CACC,MAAO,CACL,cAAe,GAAGI,CAAS,GAC3B,WAAY,GAAGC,CAAU,GACzB,eAAgB,GAAGC,CAAc,GACjC,IAAK,sBAAsBH,CAAO,GACpC,EACA,UAAWK,EAAKN,EAAWO,EAAO,KAAK,EAEtC,SAAAR,CAAA,CAAA"}