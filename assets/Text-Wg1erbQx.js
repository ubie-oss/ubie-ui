import{j as n}from"./jsx-runtime-DuyR_K1q.js";import{c as g}from"./clsx-B-dksMZM.js";import{r as A}from"./index-yUhCOHB4.js";import{f as C}from"./component-NUmYR5Q2.js";import{c as D}from"./style-tAEL1aNt.js";const y="_text_1x4ie_1",B="_link_1x4ie_39",b="_bold_1x4ie_53",h="_body_1x4ie_58",k="_xs_1x4ie_58",w="_sm_1x4ie_62",V="_md_1x4ie_66",q="_lg_1x4ie_70",T="_heading_1x4ie_74",R="_xxs_1x4ie_74",j="_xl_1x4ie_94",N="_button_1x4ie_98",H="_tag_1x4ie_110",L="_narrow_1x4ie_142",M="_left_1x4ie_146",z="_center_1x4ie_150",O="_right_1x4ie_154",W="_nowrap_1x4ie_158",u={text:y,link:B,bold:b,body:h,xs:k,sm:w,md:V,lg:q,heading:T,xxs:R,xl:j,button:N,tag:H,default:"_default_1x4ie_119",narrow:L,left:M,center:z,right:O,nowrap:W};function I(l,d){const{render:e,as:a="p",size:c="md",type:m="body",leading:_="default",bold:p=!1,noWrap:f=!1,color:t,children:x,id:v,textAlign:r,...F}=l,E=t??(a==="a"||a==="button"||e!=null?"link":"main");return((o,i)=>e?A.cloneElement(e,o,i):n.jsx(a,{...o,children:i}))({ref:d,id:v,className:g(u.text,u[c],u[m],u[_],r&&u[r],p&&u.bold,f&&u.nowrap),style:D(E),...F},n.jsx(n.Fragment,{children:x}))}const s=C(I);try{s.displayName="Text",s.__docgenInfo={description:"",displayName:"Text",props:{as:{defaultValue:{value:"p"},description:`レンダリングされる要素を指定。renderとは違い、HTMLのネイティブ要素に限定
また、指定した要素に応じて対応する属性も合わせて使用可能に`,name:"as",required:!1,type:{name:"ElementType"}},render:{defaultValue:null,description:`レンダリングされる要素を変更。フレームワークのリンクコンポーネントを想定しています
指定した場合、colorがデフォルトでlinkになります`,name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},children:{defaultValue:null,description:`表示するテキスト
pやdivなどを含めないでください（文法的にNGです）`,name:"children",required:!1,type:{name:"ReactNode"}},bold:{defaultValue:null,description:"太字とする",name:"bold",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"main"},description:"文字色の抽象値",name:"color",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"main"'},{value:'"sub"'},{value:'"black"'},{value:'"blue"'},{value:'"pink"'},{value:'"orange"'},{value:'"purple"'},{value:'"green"'},{value:'"red"'},{value:'"blackDarken"'},{value:'"blueDarken"'},{value:'"pinkDarken"'},{value:'"orangeDarken"'},{value:'"purpleDarken"'},{value:'"greenDarken"'},{value:'"redDarken"'},{value:'"disabled"'},{value:'"linkSub"'},{value:'"white"'}]}},id:{defaultValue:null,description:"HTMLのid属性",name:"id",required:!1,type:{name:"string"}},textAlign:{defaultValue:null,description:"テキストの配置。指定しない場合、親要素の配置を継承",name:"textAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},noWrap:{defaultValue:null,description:"領域が狭い場合でも折り返えさない",name:"noWrap",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"body"},description:"テキストの種類",name:"type",required:!1,type:{name:"enum",value:[{value:'"body"'},{value:'"button"'},{value:'"heading"'},{value:'"tag"'}]}},size:{defaultValue:{value:"md"},description:"フォントサイズの抽象値",name:"size",required:!1,type:{name:"enum",value:[{value:'"xxs"'},{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},leading:{defaultValue:{value:`default
default
default`},description:"行送りの抽象値（`line-height`）",name:"leading",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"narrow"'}]}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom",name:"ref",required:!1,type:{name:"Ref<any> | ((((instance: HTMLParagraphElement | null) => void) | RefObject<HTMLParagraphElement>) & (((instance: any) => void) | RefObject<...>))"}}}}}catch{}export{s as T};
