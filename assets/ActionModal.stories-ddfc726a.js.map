{"version":3,"file":"ActionModal.stories-ddfc726a.js","sources":["../../src/components/ActionModal/ActionModal.tsx"],"sourcesContent":["'use client';\n\nimport { Dialog, Transition } from '@headlessui/react';\nimport clsx from 'clsx';\nimport { FC, Fragment, PropsWithChildren } from 'react';\nimport styles from './ActionModal.module.css';\nimport { Button } from '../../';\nimport { opacityToClassName } from '../../utils/style';\nimport { AllOrNone } from '../../utils/types';\n\ntype Opacity = 'normal' | 'darker';\n\ntype BaseProps = {\n  /**\n   * 閉じるアクションが実行された場合のコールバック\n   */\n  onClose: () => void;\n  /**\n   * プライマリーアクションボタンが実行された場合のコールバック\n   */\n  onPrimaryAction?: () => void;\n  /**\n   * ヘッダーに表示する見出しテキスト\n   */\n  header?: string;\n  /**\n   * プライマリーアクションボタンのラベル\n   */\n  primaryActionLabel?: string;\n  /**\n   * プライマリーアクションボタンのカラースキーム\n   */\n  primaryActionColor?: 'primary' | 'alert';\n  /**\n   * 閉じるボタンのラベル\n   * @default 閉じる\n   */\n  closeLabel?: string;\n  /**\n   * オーバーレイの透過度\n   * @default normal\n   */\n  overlayOpacity?: Opacity;\n  /**\n   * 画面を占有する高さで固定するかどうか\n   * @default false\n   */\n  fixedHeight?: boolean;\n  /**\n   * 閉じるボタンを表示するかどうか\n   * @default true\n   */\n  showClose?: boolean;\n  /**\n   * モーダルダイアログを開くかどうか\n   * @default true\n   */\n  open?: boolean;\n  /**\n   * openを無視してモーダルを開いたままにするかどうか。アニメーションライブラリとの連携で、ActionHalfModal自身が開閉に関与しない場合に使用\n   * @default false\n   */\n  isStatic?: boolean;\n};\n\ntype SecondaryActionProps = {\n  /**\n   * セカンダリーアクションが実行された場合のコールバック\n   */\n  onSecondaryAction: () => void;\n  /**\n   * セカンダリーアクションボタンのラベル\n   */\n  secondaryActionLabel: string;\n};\n\ntype Props = PropsWithChildren<BaseProps> & AllOrNone<SecondaryActionProps>;\n\nexport const ActionModal: FC<Props> = ({\n  children,\n  onClose,\n  onPrimaryAction,\n  onSecondaryAction,\n  header,\n  primaryActionLabel,\n  secondaryActionLabel,\n  primaryActionColor,\n  closeLabel = '閉じる',\n  overlayOpacity = 'normal',\n  fixedHeight = false,\n  showClose = true,\n  open = true,\n  isStatic = false,\n}) => {\n  const opacityClassName = opacityToClassName(overlayOpacity);\n\n  return (\n    <Transition\n      show={open}\n      as={Fragment}\n      enter={styles.panelEnter}\n      enterFrom={styles.panelEnterFrom}\n      enterTo={styles.panelEnterTo}\n      leave={styles.panelLeave}\n      leaveFrom={styles.panelLeaveFrom}\n      leaveTo={styles.panelLeaveTo}\n    >\n      <Dialog static={isStatic} onClose={onClose} className={styles.modal}>\n        <Dialog.Overlay className={clsx(styles.overlay, styles[opacityClassName])} />\n        <div className={clsx(styles.modalBody, !header && styles.headerLess, fixedHeight && styles.fixedHeight)}>\n          {header && <Dialog.Title className={styles.header}>{header}</Dialog.Title>}\n          <div className={styles.contents}>{children}</div>\n          <div className={styles.buttonContainer}>\n            {onPrimaryAction && primaryActionLabel && (\n              <Button block onClick={onPrimaryAction} variant={primaryActionColor}>\n                {primaryActionLabel}\n              </Button>\n            )}\n            {onSecondaryAction && secondaryActionLabel && (\n              <Button block variant=\"secondary\" onClick={onSecondaryAction}>\n                {secondaryActionLabel}\n              </Button>\n            )}\n            {showClose && (\n              <Button variant=\"text\" onClick={onClose}>\n                {closeLabel}\n              </Button>\n            )}\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n"],"names":["ActionModal","children","onClose","onPrimaryAction","onSecondaryAction","header","primaryActionLabel","secondaryActionLabel","primaryActionColor","closeLabel","overlayOpacity","fixedHeight","showClose","open","isStatic","opacityClassName","opacityToClassName","jsx","Transition","Fragment","styles","jsxs","Dialog","clsx","Button"],"mappings":"o9BA8EOA,EAAA,CAAA,CAAgC,SAAAC,EACrC,QAAAC,EACA,gBAAAC,EACA,kBAAAC,EACA,OAAAC,EACA,mBAAAC,EACA,qBAAAC,EACA,mBAAAC,EACA,WAAAC,EAAA,MACa,eAAAC,EAAA,SACI,YAAAC,EAAA,GACH,UAAAC,EAAA,GACF,KAAAC,EAAA,GACL,SAAAC,EAAA,EAET,IAAA,CACE,MAAAC,EAAAC,EAAAN,CAAA,EAEA,OAAAO,EACEC,EAAC,CAAA,KAAAL,EACO,GAAAM,EAAA,SACF,MAAAC,EAAA,WACU,UAAAA,EAAA,eACI,QAAAA,EAAA,aACF,MAAAA,EAAA,WACF,UAAAA,EAAA,eACI,QAAAA,EAAA,aACF,SAAAC,EAAAC,EAAA,CAAA,OAAAR,EAAA,QAAAZ,EAAA,UAAAkB,EAAA,MAAA,SAAA,CAGdH,EAAAK,EAAA,QAAA,CAAA,UAAAC,EAAAH,EAAA,QAAAA,EAAAL,CAAA,CAAA,CAAA,CAAA,EAA2EM,EAAA,MAAA,CAAA,UAAAE,EAAAH,EAAA,UAAA,CAAAf,GAAAe,EAAA,WAAAT,GAAAS,EAAA,WAAA,EAAA,SAAA,CAExEf,GAAAY,EAAAK,EAAA,MAAA,CAAA,UAAAF,EAAA,OAAA,SAAAf,EAAA,EAA0DY,EAAA,MAAA,CAAA,UAAAG,EAAA,SAAA,SAAAnB,EAAA,EAChBoB,EAAA,MAAA,CAAA,UAAAD,EAAA,gBAAA,SAAA,CAExCjB,GAAAG,GAAAW,EAAAO,EAAA,CAAA,MAAA,GAAA,QAAArB,EAAA,QAAAK,EAAA,SAAAF,CAAA,CAAA,EAGCF,GAAAG,GAAAU,EAAAO,EAAA,CAAA,MAAA,GAAA,QAAA,YAAA,QAAApB,EAAA,SAAAG,CAAA,CAAA,EAKAK,GAAAK,EAAAO,EAAA,CAAA,QAAA,OAAA,QAAAtB,EAAA,SAAAO,EAAA,CAKA,EAAA,CAEJ,EAAA,CACF,EAAA,CACF,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}